services:
  angular:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - nestjs
    networks:
      - front_network

  nestjs:
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./docker-data/uploads:/usr/src/app/uploads
    depends_on:
      - db
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=${DB_DATABASE_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_NAME=${DB_DATABASE_NAME}
    networks:
      - backend_network

  db:
    image: postgres:14-alpine
    container_name: sn_db
    environment:
      POSTGRES_USER: ${DB_DATABASE_USER}  
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend_network

volumes:
  uploads:
    driver: local
  db_data:
    driver: local

networks:
  backend_network:
    driver: bridge
  front_network:
    driver: bridge